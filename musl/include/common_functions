#!/bin/bash

setup_unikraft()
{
    # Use Simon's scheduling branch.
    #git remote add skuenzer https://github.com/skuenzer/unikraft
    #git fetch skuenzer
    #git checkout -b skuenzer/sched-refactor skuenzer/skuenzer/sched-refactor

    ## Integrate PR #454: lib/uktime: Solve redefining conflicts
    #git remote add dragosargint https://github.com/dragosargint/unikraft
    #git fetch dragosargint
    #git checkout -b uktime dragosargint/uktime

    ## Rebase the two branches.
    #git checkout -b musl-support staging
    #git rebase uktime
    #git rebase skuenzer/sched-refactor

    # Use a merging of Simon's and Dragos's changes.
    git remote add upb https://github.com/unikraft-upb/unikraft
    git fetch upb
    git checkout -b musl-support upb/musl-support

    # Integrate PRs 553 and 602.
    git remote add maniatro111 https://github.com/maniatro111/unikraft/
    git fetch maniatro111
    git checkout -b clone-rule maniatro111/clone-rule
    git checkout -b disable-uktest-test-myself-suite-when-option-is-disabled maniatro111/disable-uktest-test-myself-suite-when-option-is-disabled

    # Integrate PR 606, fixing ARM runs.
    git remote add alexhoppus https://github.com/alexhoppus/unikraft/
    git fetch alexhoppus
    git checkout -b bugfix/uktest_perm_ro alexhoppus/bugfix/uktest_perm_ro

    git checkout staging
    git rebase musl-support
    git rebase clone-rule
    git rebase disable-uktest-test-myself-suite-when-option-is-disabled
    git rebase bugfix/uktest_perm_ro
}

setup_musl()
{
    # Integrate PR #9: Thread support for musl
    git remote add dragosargint https://github.com/dragosargint/lib-musl/
    git fetch dragosargint
    git checkout -b thread_support dragosargint/thread_support

    # Integrate aarch64 PRs: #6, #7, #11, #13
    git remote add kubanrob https://github.com/kubanrob/lib-musl/
    git fetch kubanrob
    git checkout -b add-patches-for-aarch64 kubanrob/add-patches-for-aarch64
    git checkout -b update-aarch64-makefiles kubanrob/update-aarch64-makefiles
    git checkout -b patch-CVE-2020-28928 kubanrob/patch-CVE-2020-28928
    git checkout -b hide-internal-headers kubanrob/hide-internal-headers

    # Integrate build PRs: #15, #17
    git checkout -b parallel-make kubanrob/parallel-make
    git checkout -b dont_clean_includes kubanrob/dont_clean_includes

    # Integrate PR #14:  Enable FPSIMD support on ARM64
    git remote add razvanvirtan https://github.com/razvanvirtan/lib-musl/
    git fetch razvanvirtan
    git checkout -b enable_fpsimd razvanvirtan/enable_fpsimd

    # Integrate PR #12: Add syscall wrapper for getrandom
    git remote add michpappas https://github.com/michpappas/lib-musl/
    git fetch michpappas
    git checkout -b add_syscall_wrapper_for_getrandom michpappas/add_syscall_wrapper_for_getrandom

    # Integrate PR #18: Always include the uname sources
    git remote add StefanJum https://github.com/StefanJum/lib-musl/
    git fetch StefanJum
    git checkout -b fix-posix-sysinfo StefanJum/fix-posix-sysinfo

    # Integrate PR #19: Integration with LWIP
    git remote add upb https://github.com/unikraft-upb/lib-musl/
    git fetch upb
    git checkout -b makefile-lwip-integration upb/makefile-lwip-integration

    # Rebase all branches
    git checkout -b musl-support staging
    git rebase thread_support
    git cherry-pick add-patches-for-aarch64~3
    git cherry-pick add-patches-for-aarch64~2
    git cherry-pick add-patches-for-aarch64~1
    git cherry-pick add-patches-for-aarch64
    git cherry-pick update-aarch64-makefiles~2
    git cherry-pick update-aarch64-makefiles~1
    git cherry-pick update-aarch64-makefiles
    #git rebase patch-CVE-2020-28928
    git cherry-pick hide-internal-headers
    #git rebase add_syscall_wrapper_for_getrandom
    git cherry-pick parallel-make
    git cherry-pick enable_fpsimd
    git rebase dont_clean_includes
    git cherry-pick makefile-lwip-integration
    # This conflicts so it by hand.
    #git rebase fix-posix-sysinfo
    sed -i -e '78d' -e '80d' Makefile.uk.musl.misc
}

setup_lwip()
{
    # Integrate PR #19: Adopt to refactored scheduling API (lib/uksched)
    git remote add skuenzer https://github.com/skuenzer/lib-lwip
    git fetch skuenzer
    git checkout -b skuenzer/sched-refactor skuenzer/skuenzer/sched-refactor

    # Integrate PR #22: Add uk/essentials.h as include dependency
    git remote add upb https://github.com/unikraft-upb/lib-lwip
    git fetch upb
    git checkout -b fix-__unused upb/fix-__unused

    # Integrate PR #23: Add Musl support
    git remote add upb https://github.com/unikraft-upb/lib-lwip
    git fetch upb
    git checkout -b musl-support upb/musl-support

    # Rebase all branches
    git checkout staging
    git rebase skuenzer/sched-refactor
    git rebase fix-__unused
    git cherry-pick musl-support
}

setup_libcxx()
{
    # Integrate PR #19: [DO NOT MERGE]: PR for testing libcxx with musl #19
    git remote add upb https://github.com/unikraft-upb/lib-libcxx
    git fetch upb
    git checkout -b remove-math-func upb/remove-math-func

    # Integrate PR #21: Define strtof_l and strtod_l in locale (aarch64)
    git remote add mariasfiraiala https://github.com/mariasfiraiala/lib-libcxx
    git fetch mariasfiraiala
    git checkout -b patch-locale mariasfiraiala/patch-locale

    # Rebase all branches.
    git checkout staging
    git rebase remove-math-func
    git cherry-pick patch-locale
}

setup_libcxxabi()
{
    # Integrate PR #2: Config.uk: Fix dependencies with libunwind
    git remote add upb https://github.com/unikraft-upb/lib-libcxxabi
    git fetch upb
    git checkout -b fix-libunwind-dep upb/fix-libunwind-dep

    git checkout staging
    git rebase fix-libunwind-dep
}

setup_libunwind()
{
    # Integrate PR #3: Config.uk: Fix dependencies with libcxxabi
    git remote add upb https://github.com/unikraft-upb/lib-libunwind
    git fetch upb
    git checkout -b fix-libcxxabi-dep upb/fix-libcxxabi-dep

    git checkout staging
    git rebase fix-libcxxabi-dep
}

setup_compiler_rt()
{
    # Integrate PR #8: Circular dependencies if adding libunwind as dependency
    git remote add DeliaPavel https://github.com/DeliaPavel/lib-compiler-rt
    git fetch DeliaPavel
    git checkout -b DeliaPavel-staging DeliaPavel/staging

    git checkout staging
    git rebase DeliaPavel-staging
}

setup_libc_test()
{
    # Integrate PR #1:  Introduce liblibctest for Unikraft
    git remote add maniatro111 https://github.com/maniatro111/lib-libctest
    git fetch maniatro111
    git checkout -b maniatro111-staging maniatro111/staging

    git checkout staging
    git rebase maniatro111-staging
}

setup()
{
    mkdir -p "$top"
    mkdir -p "$libs"
    mkdir -p "$apps"

    if test ! -d "$uk"; then
        git clone https://github.com/unikraft/unikraft "$uk"
        pushd "$uk" > /dev/null
        setup_unikraft
        popd > /dev/null
    fi

    if test ! -d "$libs"/musl; then
        git clone https://github.com/unikraft/lib-musl "$libs"/musl
        pushd "$libs"/musl > /dev/null
        setup_musl
        popd > /dev/null
    fi

    if test ! -d "$libs"/lwip; then
        git clone https://github.com/unikraft/lib-lwip "$libs"/lwip
        pushd "$libs"/lwip > /dev/null
        setup_lwip
        popd > /dev/null
    fi

    if test ! -d "$libs"/libcxx; then
        git clone https://github.com/unikraft/lib-libcxx "$libs"/libcxx
        pushd "$libs"/libcxx > /dev/null
        setup_libcxx
        popd > /dev/null
    fi

    if test ! -d "$libs"/libcxxabi; then
        git clone https://github.com/unikraft/lib-libcxxabi "$libs"/libcxxabi
        pushd "$libs"/libcxxabi > /dev/null
        setup_libcxxabi
        popd > /dev/null
    fi

    if test ! -d "$libs"/libunwind; then
        git clone https://github.com/unikraft/lib-libunwind "$libs"/libunwind
        pushd "$libs"/libunwind > /dev/null
        setup_libunwind
        popd > /dev/null
    fi

    if test ! -d "$libs"/compiler-rt; then
        git clone https://github.com/unikraft/lib-compiler-rt "$libs"/compiler-rt
        pushd "$libs"/compiler-rt > /dev/null
        setup_compiler_rt
        popd > /dev/null
    fi

    if test ! -d "$libs"/libc-test; then
        git clone https://github.com/unikraft/lib-libc-test "$libs"/libc-test
        pushd "$libs"/libc-test > /dev/null
        setup_libc_test
        popd > /dev/null
    fi
}

build()
{
    pushd "$app" > /dev/null
    export UK_WORKDIR=$(pwd)/../../
    # Do not use LIBUKSIGNAL with Musl.
    kraft configure -n LIBUKSIGNAL -F -m x86_64 -p kvm
    kraft prepare
    kraft build -j $(nproc)
    popd > /dev/null
}

clean()
{
    pushd "$app" > /dev/null
    export UK_WORKDIR=$(pwd)/../../
    kraft clean -d
    popd > /dev/null
}

remove()
{
    rm -fr "$top"
}

_setup_networking()
{
    sudo ip link set dev virbr0 down
    sudo ip link del dev virbr0
    sudo ip link add virbr0 type bridge
    sudo ip address add 172.44.0.1/24 dev virbr0
    sudo ip link set dev virbr0 up
}
